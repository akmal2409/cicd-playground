name: Release CI/CD Pipeline
run-name: ${{ github.actor }} triggered release
on:
  push:
    branches:
      - 'releases/**'

env:
  REGISTRY: 'ghcr.io'
  IMAGE_NAME: ${{ github.repository }}
  BACKEND_WORK_DIR: 'backend'
  FRONTEND_WORK_DIR: 'frontend'
  BACKEND_IMAGE_NAME_TAG: 'ghcr.io/akmal2409/cicd-backend:latest'
  FRONTEND_IMAGE_NAME_TAG: 'ghcr.io/akmal2409/cicd-frontend:latest'

jobs:
  Backend-Build:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write 

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Set up JDK 19
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '19'
          cache: 'maven'

      - name: Package the artefact
        working-directory: ${{ env.BACKEND_WORK_DIR }}
        run: mvn -B package -DskipTests --file pom.xml

      - name: Run Unit tests
        working-directory: ${{ env.BACKEND_WORK_DIR }}
        run: mvn surefire:test

      - name: Run Integration tests
        working-directory: ${{ env.BACKEND_WORK_DIR }}
        run: mvn failsafe:integration-test failsafe:verify

      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for docker/login-action
        id: meta
        uses: docker/metadata-action@v2
        with:
          images: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME_TAG }}

      - name: Build and push docker image
        uses: docker/build-push-action@v4
        with:
          context: ${{ env.BACKEND_WORK_DIR }}/
          push: true
          tags: ${{ env.BACKEND_IMAGE_NAME_TAG }}
          labels: ${{ steps.meta.outputs.labels }}

  Frontend-Build:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write 
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for docker/login-action
        id: meta
        uses: docker/metadata-action@v2
        with:
          images: ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME_TAG }}
      
      - name: Build nginx image with angular app
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ env.FRONTEND_IMAGE_NAME_TAG }}
          labels: ${{ steps.meta.outputs.labels }}
          file: Dockerfile.frontend.prod


      
